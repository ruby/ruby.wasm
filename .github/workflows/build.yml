name: Build ruby.wasm
on:
  push:
    branches: [main]
    tags: ["*"]
    paths-ignore:
      - "*.md"
      - "docs/**"
  pull_request:
  workflow_call:
    inputs:
      publish:
        type: boolean
        description: "Whether to publish or not"
        default: true
      prerel_name:
        type: string
        description: "Pre-release name to be released"
        required: true
    secrets:
      NODE_AUTH_TOKEN:
        required: true

jobs:
  lint:
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: sudo apt-get install clang-format
      - run: ./tools/clang-format-diff.sh
      - run: rake check:bindgen
      - run: git diff --exit-code

  build-builder-image:
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { tag: wasm32-unknown-wasi }
          - { tag: wasm32-unknown-emscripten }
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3.2.2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: builders/${{ matrix.entry.tag }}
          outputs: type=docker,dest=/tmp/image.tar
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        with:
          name: ruby.wasm-builder-${{ matrix.entry.tag }}
          path: /tmp/image.tar
      - name: Push
        uses: docker/build-push-action@v3
        with:
          context: builders/${{ matrix.entry.tag }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ghcr.io/${{ github.repository_owner }}/ruby.wasm-builder:${{ matrix.entry.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # https://github.com/docker/build-push-action/issues/252#issuecomment-744400434
      - run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-rake-task-matrix:
    runs-on: ubuntu-20.04
    outputs:
      entries: ${{ steps.set-matrix.outputs.entries }}
    steps:
      - uses: actions/checkout@v3
      - run: rake ci:pin_build_manifest
      - uses: actions/upload-artifact@v3
        with:
          name: build-manifest
          path: build-manifest.json
      - name: Set matrix
        id: set-matrix
        run: |
          echo "entries=$(rake ci:rake_task_matrix)" >> $GITHUB_OUTPUT

  rake-tasks:
    strategy:
      fail-fast: false
      matrix:
        entry: ${{ fromJson(needs.build-rake-task-matrix.outputs.entries) }}

    needs: [build-builder-image, build-rake-task-matrix]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: build-manifest
      - uses: actions/cache@v3
        with:
          path: ./rubies
          key: ${{ matrix.entry.rubies_cache_key }}
      - name: Fetch builder image
        uses: actions/download-artifact@v3
        with:
          name: ruby.wasm-builder-${{ matrix.entry.builder }}
      - name: Load builder image
        id: load-image
        run: |
          docker load --input image.tar | tee image-info.txt
          echo "BUILDER_IMAGE_ID=$(cut -d ':' -f 3 image-info.txt)" >> $GITHUB_ENV
      - name: Pre-release configuration
        run: rake ${{ matrix.entry.prerelease }}[${{ inputs.prerel_name }}]
        if: ${{ inputs.prerel_name != '' && matrix.entry.prerelease != '' }}
      - name: rake ${{ matrix.entry.task }}
        run: docker run -v "$GITHUB_WORKSPACE:/home/me/build" -w /home/me/build -e "RUBYWASM_UID=$(id -u)" -e "RUBYWASM_GID=$(id -g)" -e "GNUMAKEFLAGS=-j$((1 + $(nproc --all)))" sha256:$BUILDER_IMAGE_ID rake ${{ matrix.entry.task }}
      - name: rake ${{ matrix.entry.test }}
        run: rake ${{ matrix.entry.test }}
        if: ${{ matrix.entry.test != '' }}
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.entry.artifact }}
        with:
          name: ${{ matrix.entry.artifact_name }}
          path: ${{ matrix.entry.artifact }}

  release-artifacts:
    needs: [rake-tasks]
    runs-on: ubuntu-20.04
    if: ${{ startsWith(github.ref, 'refs/tags/') || inputs.publish }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: release
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - run: echo "PREREL_NAME=${{ inputs.prerel_name }}" >> $GITHUB_ENV
      - run: rake "publish[${PREREL_NAME:-$GITHUB_REF_NAME}]"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
